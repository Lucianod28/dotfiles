set nocompatible    " Use vim mode (rather than vi)

let mapleader=" "   " Use space as leader

set shell=/bin/zsh  " Use zsh

" Appearance
set number relativenumber   " Use relative line numbers
set colorcolumn=100         " Highlight column 100
set visualbell              " No more error sound
set cursorline              " Underline the current line
set scrolloff=10            " Start scrolling when we're 10 lines from the bottom of the screen
syntax on                   " Enable syntax highlighting
colorscheme zenburn

" Jump to matching html tag with %
runtime macros/matchit.vim

" Indentation
filetype indent on  " Turn filetype detection on and indent based on filetype
set smartindent		" Indent according to filetype
set autoindent		" Copy indent from previous line to next line
set tabstop=4       " Make tab 4 columns wide
set softtabstop=4   " Hitting tab indents at most 4 columns
set shiftwidth=4    " Number of spaces to use for auto indent
set shiftround      " Round indentation to multiples of shiftwidth
set expandtab		" Indent with spaces (I'm not a fan but seems to be more standard)
set textwidth=0     " Don't enforce a column limit

" Folding
set foldmethod=indent   " Fold based on indent
set foldlevel=99        " Start unfolded

" Searching
set gdefault                " Never have to type /g at the end of search / replace again
set ignorecase smartcase    " Search is case sensitive iff it contains uppercase letters
set hlsearch                " Highlight search results
nnoremap <silent> <leader>l :noh<cr> " Leader l clears search highlight
set incsearch               " Searched term appears as its typed
set showmatch               " Highlights the brace that matches the one under the cursor

set backspace=indent,eol,start

fun! <SID>StripTrailingWhitespace()
    let l = line(".")
    let c = col(".")
    keepp %s/\s\+$//e
    call cursor(l, c)
endfun

" Autocommands
augroup vimrc
  au!
  " Set tab size to 2 for html files
  au FileType html*,yaml setlocal shiftwidth=2 softtabstop=2 tabstop=2
  " Automatically delete trailing whitespace on save
  au BufWritePre * call <SID>StripTrailingWhitespace()
  " Reset the cursor to block on start
  autocmd VimEnter * silent !echo -ne "\e[2 q"
  " Clear garbage characters from screen
  autocmd VimEnter * redraw!
augroup END

" Quicker movement between windows
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

" Split windows open at bottom or right
set splitbelow splitright

" H, L to change tabs
nnoremap H gT
nnoremap L gt

map <tab> %

" Shortcuts for copy/pasting to/from system clipboard
noremap <leader>y "*y
noremap <leader>p "*p

set undofile                " Maintain undo history between sessions
set directory=~/.vim/swap// " Keep swap files in directory
set undodir=~/.vim/undo//   " Keep undo files in undodir
set keywordprg=:Man         " When K is pressed man page will open in vim

" Use block cursor for normal mode, bar for insert
let &t_SI = "\e[6 q" " bar
let &t_EI = "\e[2 q" " block
set timeoutlen=1000
set ttimeoutlen=0
